# Customized for emissary ingress 8.3.1

topologySpreadConstraints:
  - maxSkew: 1
    topologyKey: kubernetes.io/hostname
    whenUnsatisfiable: ScheduleAnyway
    labelSelector:
      matchLabels:
        app.kubernetes.io/name: ambassador
affinity:
  nodeAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
    - weight: 100
      preference:
        matchExpressions:
        - key: cloud.google.com/gke-spot
          operator: NotIn
          values:
          - "true"
    - weight: 100
      preference:
        matchExpressions:
        - key: cloud.google.com/gke-preemptible
          operator: NotIn
          values:
          - "true"

podDisruptionBudget: {}

# Do not create the Module in this helm chart.
module:

# Do not run the agent
agent:
  enabled: false

namespace:
  # Explicitly set the AMBASSADOR_NAMESPACE environment variable
  name: ingress

prometheusExporter:
  enabled: true

podAnnotations:
  ad.datadoghq.com/prometheus-exporter.checks: |
      {
        "openmetrics": {
          "instances": [
            {
              "openmetrics_endpoint": "http://%%host%%:8877/metrics",
              "namespace": "emissary",
              "metrics": [ ".*" ]
            }
          ]
        }
      }

adminService:
  annotations:
   prometheus.io/scrape: "true"
   prometheus.io/path: "/metrics"
   prometheus.io/port: "8877"  # If true, create a service for Ambassador's admin UI

# CPU/memory resource requests/limits
resources: # +doc-gen:break
  # No limits
  requests:
    cpu: 200m
    memory: 300Mi

podLabels:
  service: statsd-sink
